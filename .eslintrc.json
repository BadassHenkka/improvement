// https://andrebnassis.medium.com/setting-eslint-on-a-react-typescript-project-2021-1190a43ffba
{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "airbnb",
        "plugin:react/recommended",
        "plugin:prettier/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:cypress/recommended",
        "prettier",
        "prettier/prettier"
    ],
    "ignorePatterns": ["*.json"],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": ["react", "react-hooks", "@typescript-eslint"],
    "rules": {
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-unused-vars": "error",
        "jsx-a11y/label-has-associated-control": [
            "error",
            {
                "labelComponents": [],
                "labelAttributes": [],
                "controlComponents": [],
                "assert": "either",
                "depth": 25
            }
        ],
        "react/jsx-filename-extension": ["warn", { "extensions": [".tsx"] }],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "react/prop-types": "off",
        "react/function-component-definition": [
            2,
            {
                "namedComponents": "arrow-function",
                "unnamedComponents": "arrow-function"
            }
        ],
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "ts": "never",
                "tsx": "never"
            }
        ],
        "no-use-before-define": "off",
        "no-shadow": "off",
        "no-param-reassign": [
            "error",
            { "props": true, "ignorePropertyModificationsFor": ["state"] }
        ],
        "max-len": ["warn", { "code": 120 }],
        "import/prefer-default-export": "off",
        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": true,
                "optionalDependencies": true,
                "peerDependencies": true
            }
        ]
    },
    "settings": {
        "react": {
          "version": "detect" // auto-detect React version from package.json.
        },
        "import/parsers": {
          "@typescript-eslint/parser": [".ts", ".tsx"] // use typescript-eslint parser for .ts|tsx files.
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`.
          }
        }
      },
      "overrides": [
        {
          "files": [
            "**/__tests__/**/*.[jt]s?(x)",
            "**/?(*.)+(spec|test).[jt]s?(x)"
          ], // Override config for same files pattern as jest `testMatch` default value
          "extends": [
            "plugin:jest/recommended",
            "plugin:jest/style",
            "plugin:jest-dom/recommended",
            "plugin:testing-library/react"
          ],
          "plugins": ["jest", "jest-dom", "testing-library"],
          "rules": {
            "jest/no-disabled-tests": "warn",
            "jest/no-focused-tests": "error",
            "jest/no-identical-title": "error",
            "jest/prefer-to-have-length": "warn",
            "jest/valid-expect": "error",
            "jest-dom/prefer-checked": "error",
            "jest-dom/prefer-enabled-disabled": "error",
            "jest-dom/prefer-required": "error",
            "jest-dom/prefer-to-have-attribute": "error",
            "testing-library/await-async-query": "error",
            "testing-library/no-await-sync-query": "error",
            "testing-library/no-debugging-utils": "warn",
            "testing-library/no-dom-import": "off"
          },
          "env": {
            "jest/globals": true // enable Jest global variables.
          }
        }
      ]
}
